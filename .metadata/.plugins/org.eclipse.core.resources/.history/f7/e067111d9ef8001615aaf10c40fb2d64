package c2g2.game;

import c2g2.engine.graph.Material;
import c2g2.engine.graph.Mesh;
import c2g2.engine.graph.OBJLoader;
import c2g2.engine.GameItem;

import java.util.ArrayList;
import java.util.List;

import org.joml.Vector3f;

import c2g2.engine.GameEngine;
import c2g2.engine.IGameLogic;

public class Grid {
	
	private int scale = 5;
	private int interval = 2;
	
	public Grid(){
	}
	//(0,0)is always the entrance and (width,height) is always the exit
	public Integer[][] getGrid(){
		Integer[][] output = new Integer[][]{{0,1,0,0,0},
								  	 		 {0,1,1,0,0},
								  	 		 {1,1,1,1,0},
								  	 		 {0,1,0,0,0},
								  	 		 {0,1,1,1,1}};
		return output;
	}
	
	public void setWall(List<GameItem> list, int i, int j, int direction){
		
	}
	
	public GameItem[] makeGrid() throws Exception{
		List<GameItem> output = new ArrayList<GameItem>();
		Integer[][] grid = this.getGrid();
		
		Mesh box = OBJLoader.loadMesh("src/resources/models/cube.obj");
		Material material = new Material(new Vector3f(1f, 1f, 1f), 1f);
        box.setMaterial(material);
		
		for(int i=0;i<grid.length;i++){
			for(int j=0;j<grid[0].length;j++){
				if(grid[i][j]==1){
					if(i==0&&j==0){
						
					}
					else if(i==0&&j==scale-1){
						
					}
					else if(i==scale-1&&j==0){
						
					}
					else if(i==scale-1&&j==scale-1){
						
					}
					else if(i==0){
						
					}
					else if(j==0){
						
					}
					else if(i==scale-1){
						
					}
					else if(j==scale-1){
						
					}
					else{
						if(grid[i-1][j]==0){
							
						}
						else if(grid[i+1][j]==0){
							
						}
						else if(grid[i][j-1]==0){
							
						}
						else if(grid[i][j+1]==0){
							
						}
					}
				}
				
			}
		}
		
		GameItem[] arr = output.toArray(new GameItem[output.size()]);
		return arr;
	}
	
	public GameItem[] gridTest() throws Exception{
		List<GameItem> output = new ArrayList<GameItem>();
		Integer[][] grid = this.getGrid();
		
		Mesh box = OBJLoader.loadMesh("src/resources/models/cube.obj");
		Material material = new Material(new Vector3f(1f, 1f, 1f), 1f);
        box.setMaterial(material);
        
        for(int i=0;i<grid.length;i++){
        	for(int j=0;j<grid[0].length;j++){
        		if(grid[i][j] == 1){
	        		GameItem item = new GameItem(box);
	        		item.setPosition(interval*i,interval*j,0);
	        		output.add(item);
        		}
        	}
        }
        //x-axis and y-axis
        Mesh box2 = OBJLoader.loadMesh("src/resources/models/cube.obj");
        Material material2 = new Material(new Vector3f(1f, 0f, 0f), 1f);
        box2.setMaterial(material2);
        for(int i=0;i<10;i++){
        	GameItem item1 = new GameItem(box2);
        	item1.setPosition(0, interval*i, 0);
        	output.add(item1);
        	GameItem item2 = new GameItem(box2);
        	item2.setPosition(0, -interval*i, 0);
        	output.add(item2);
        	GameItem item3 = new GameItem(box2);
        	item3.setPosition(interval*i, 0, 0);
        	output.add(item3);
        	GameItem item4 = new GameItem(box2);
        	item4.setPosition(-interval*i, 0, 0);
        	output.add(item4);
        }
        
        GameItem[] arr = output.toArray(new GameItem[output.size()]);
		return arr;
	}
	
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
